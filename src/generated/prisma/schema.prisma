// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Brand {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  series    Series[]
  cars      Car[]
}

model Series {
  id        Int      @id @default(autoincrement())
  name      String
  brandId   Int
  brand     Brand    @relation(fields: [brandId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  cars      Car[]

  @@unique([name, brandId])
}

model FuelType {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  cars      Car[]
}

model BodyType {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  cars      Car[]
}

model Car {
  id          Int      @id @default(autoincrement())
  title       String
  year        Int
  brandId     Int
  brand       Brand    @relation(fields: [brandId], references: [id])
  seriesId    Int?
  series      Series?  @relation(fields: [seriesId], references: [id])
  fuelTypeId  Int
  fuelType    FuelType @relation(fields: [fuelTypeId], references: [id])
  bodyTypeId  Int
  bodyType    BodyType @relation(fields: [bodyTypeId], references: [id])
  price       Float
  mileage     Int?
  imageUrl    String?
  description String?  @db.Text
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@index([year])
  @@index([brandId])
  @@index([seriesId])
  @@index([fuelTypeId])
  @@index([bodyTypeId])
}
